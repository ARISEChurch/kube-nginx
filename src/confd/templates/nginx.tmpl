user nginx;
worker_processes auto;

pid /run/nginx.pid;

events {
	worker_connections 1024;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_requests 10000;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log off;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##
	gzip on;
	gzip_disable "msie6";

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;

	{{range $spec := getvs "/registry/services/specs/*/*"}}
	{{$data := json $spec}}
	{{$type := index $data.metadata.labels "nginx/type"}}
	{{if $type}}{{if eq $type "external"}}
	{{$host := (index $data.metadata.annotations "nginx/host") }}
	{{$path := (index $data.metadata.annotations "nginx/path") }}
	{{$websocket := (index $data.metadata.annotations "nginx/websocket") }}
	{{$sslCrt := (index $data.metadata.annotations "nginx/sslCrt") }}
	{{$sslKey := (index $data.metadata.annotations "nginx/sslKey") }}
	{{$endpointsDir := printf "/registry/services/endpoints/%s/%s" $data.metadata.namespace $data.metadata.name}}
	{{if exists $endpointsDir}}
	{{$endpoints := json (getv $endpointsDir)}}
	{{if and $host $endpoints.subsets }}
	{{$upstreamKey := printf "backend-%s-%s" $data.metadata.namespace $data.metadata.name}}
	upstream {{$upstreamKey}} {
		{{range $endpoint := $endpoints.subsets}}
		{{$port := (index $endpoint.ports 0)}}
		{{range $address := $endpoint.addresses}}
		server {{$address.ip}}:{{$port.port}};
		{{end}}
		{{end}}
	}

	server {
		listen 80;
		server_name {{$host}};

		{{if $sslCrt}}
		ssl_certificate /etc/nginx/ssl/{{$sslCrt}};
		ssl_certificate_key /etc/nginx/ssl/{{$sslKey}};

		ssl on;
		ssl_session_cache  builtin:1000  shared:SSL:10m;
		ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
		ssl_prefer_server_ciphers on;
		{{ end }}

		location / {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;

			{{if $sslCrt }}
			proxy_redirect http:// https://;
			{{ else }}
			proxy_redirect off;
			{{ end }}

			{{if $websocket }}
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			{{ end }}

			proxy_pass http://{{$upstreamKey}};
		}
	}{{ end }}{{ end }}{{ end }}{{ end }}{{ end }}
}
